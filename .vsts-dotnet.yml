trigger:
- master
- vs*

jobs:
- job: Windows_NT
  pool: 
    name: VSEng-MicroBuildVS2017
    demands:
    - agent.os -equals Windows_NT

  timeoutInMinutes: 180

  variables:
  - group: DotNet-Blob-Feed
  - group: DotNet-Symbol-Publish
  - group: Publish-Build-Assets
  - name: TeamName
    value: MSBuild
  - name: VisualStudio.MajorVersion
    value: 16
  - name: VisualStudio.BranchName
    value: 'lab/d16.0stg'
  - name: VisualStudio.ChannelName
    value: 'int.d16.0stg'
  - name: VisualStudio.DropName
    value: Products/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildNumber)

  steps:
  - task: NuGetToolInstaller@0
    inputs:
      versionSpec: '4.9.2'

  - task: NuGetCommand@2
    displayName: 'Clear NuGet caches'
    inputs:
      command: custom
      arguments: 'locals all -clear'

  - task: NuGetCommand@2
    displayName: Restore internal tools
    inputs:
      command: restore
      feedsToUse: config
      restoreSolution: 'eng\internal\Toolset.csproj'
      nugetConfigPath: 'NuGet.config'
      restoreDirectory: '$(UserProfile)\.nuget\packages'

  - task: ms-vseng.MicroBuildTasks.30666190-6959-11e5-9f96-f56098202fef.MicroBuildSigningPlugin@1
    inputs:
      signType: real
    condition: succeeded()

  - task: ms-vseng.MicroBuildTasks.965C8DC6-1483-45C9-B384-5AC75DA1F1A4.MicroBuildOptProfPlugin@1
    inputs:
      skipRunOptimize: true
    displayName: 'Install OptProf Plugin'

  - task: ms-vseng.MicroBuildTasks.32f78468-e895-4f47-962c-58a699361df8.MicroBuildSwixPlugin@1
    inputs:
      dropName: $(VisualStudio.DropName)
      feedSource: 'https://devdiv-test.pkgs.visualstudio.com/_packaging/MicroBuildToolset/nuget/v3/index.json'

  - script: eng/CIBuild.cmd
              -configuration Release
              -vsDropName $(VisualStudio.DropName)
              -vsBranch $(VisualStudio.BranchName)
              -vsDropAccessToken $(System.AccessToken)
              -officialBuildId $(BUILD.BUILDNUMBER)
              /p:DotNetPublishBlobFeedKey=$(dotnetfeed-storage-access-key-1)
              /p:DotNetPublishBlobFeedUrl=https://dotnetfeed.blob.core.windows.net/dotnet-core/index.json
              /p:DotNetPublishToBlobFeed=true
              /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat)
              /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat)              
              /p:PublishToSymbolServer=true
              /p:DotNetSignType=real
              /p:TeamName=MSBuild
    displayName: Build
    condition: succeeded()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: logs'
    inputs:
      PathtoPublish: 'artifacts\log\Release'
      ArtifactName: logs
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: packages'
    inputs:
      PathtoPublish: 'artifacts\packages\Release'
      ArtifactName: packages
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: vsix'
    inputs:
      PathtoPublish: 'artifacts\VSSetup\Release\Insertion'
      ArtifactName: vsix
    condition: succeededOrFailed()

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: bin'
    inputs:
      PathtoPublish: 'artifacts\bin'
      ArtifactName: bin
    condition: succeededOrFailed()

  - task: ms-vseng.MicroBuildTasks.4305a8de-ba66-4d8b-b2d1-0dc4ecbbf5e8.MicroBuildUploadVstsDropFolder@1
    displayName: Upload VSTS Drop
    inputs:
      DropName: $(VisualStudio.DropName)
      DropFolder: 'artifacts\VSSetup\Release\Insertion'
    condition: succeeded()

  - task: CopyFiles@2
    displayName: Gather Asset Manifests
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/artifacts/log/Release/AssetManifest'
      TargetFolder: '$(Build.StagingDirectory)/AssetManifests'
    condition: succeeded()

  - task: PublishBuildArtifacts@1
    displayName: Push Asset Manifests
    inputs:
      PathtoPublish: '$(Build.StagingDirectory)/AssetManifests'
      PublishLocation: Container
      ArtifactName: AssetManifests
    condition: succeeded()

  - task: ms-vseng.MicroBuildTasks.521a94ea-9e68-468a-8167-6dcf361ea776.MicroBuildCleanup@1
    displayName: Execute cleanup tasks

- template: /eng/common/templates/job/publish-build-assets.yml
  parameters:
    enablePublishBuildArtifacts: true
    dependsOn:
      - Windows_NT
    pool:
      vmImage: vs2017-win2016
